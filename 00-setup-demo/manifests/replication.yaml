apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: componentsubscriptions.delivery.ocm.software
spec:
  group: delivery.ocm.software
  names:
    kind: ComponentSubscription
    listKind: ComponentSubscriptionList
    plural: componentsubscriptions
    singular: componentsubscription
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ComponentSubscription is the Schema for the componentsubscriptions
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ComponentSubscriptionSpec defines the desired state of ComponentSubscription
            properties:
              component:
                type: string
              destination:
                description: OCMRepository defines details for a repository, such
                  as access keys and the url.
                properties:
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to locate the referenced Kubernetes resource object.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                    required:
                    - name
                    type: object
                  url:
                    type: string
                required:
                - url
                type: object
              interval:
                description: Interval is the reconciliation interval, i.e. at what
                  interval shall a reconciliation happen. This is used to requeue
                  objects for reconciliation in case of success as well as already
                  reconciling objects.
                type: string
              semver:
                type: string
              serviceAccountName:
                description: ServiceAccountName can be used to configure access to
                  both destination and source repositories. If service account is
                  defined, it's usually redundant to define access to either source
                  or destination, but it is still allowed to do so. https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#add-imagepullsecrets-to-a-service-account
                type: string
              source:
                description: OCMRepository defines details for a repository, such
                  as access keys and the url.
                properties:
                  secretRef:
                    description: LocalObjectReference contains enough information
                      to locate the referenced Kubernetes resource object.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                    required:
                    - name
                    type: object
                  url:
                    type: string
                required:
                - url
                type: object
              verify:
                items:
                  description: Signature defines the details of a signature to use
                    for verification.
                  properties:
                    name:
                      description: Name of the signature.
                      type: string
                    publicKey:
                      description: Key which is used for verification.
                      properties:
                        secretRef:
                          description: LocalObjectReference contains enough information
                            to locate the referenced Kubernetes resource object.
                          properties:
                            name:
                              description: Name of the referent.
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - secretRef
                      type: object
                  required:
                  - name
                  - publicKey
                  type: object
                type: array
            required:
            - component
            - interval
            - source
            type: object
          status:
            description: ComponentSubscriptionStatus defines the observed state of
              ComponentSubscription
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              latestVersion:
                description: LatestVersion defines the version that was last reconciled
                  successfully.
                type: string
              observedGeneration:
                description: ObservedGeneration is the last reconciled generation.
                format: int64
                type: integer
              replicatedVersion:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: replication-controller
  namespace: ocm-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: replication-controller
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: replication-controller
  name: leader-election-role
  namespace: ocm-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: replication-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - delivery.ocm.software
  resources:
  - componentsubscriptions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - delivery.ocm.software
  resources:
  - componentsubscriptions/finalizers
  verbs:
  - update
- apiGroups:
  - delivery.ocm.software
  resources:
  - componentsubscriptions/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: replication-controller
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: replication-controller
  name: leader-election-rolebinding
  namespace: ocm-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: leader-election-role
subjects:
- kind: ServiceAccount
  name: replication-controller
  namespace: ocm-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: replication-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: replication-manager-role
subjects:
- kind: ServiceAccount
  name: replication-controller
  namespace: ocm-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: replication-controller
  name: replication-controller
  namespace: ocm-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: replication-controller
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: replication-controller
    spec:
      containers:
      - args:
        - --leader-elect
        - --zap-log-level=4
        command:
        - /manager
        image: ghcr.io/phoban01/replication-controller:v0.2.4
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: certs
          mountPath: /etc/ssl/certs
      securityContext:
        runAsNonRoot: true
      serviceAccountName: replication-controller
      terminationGracePeriodSeconds: 10
      volumes:
      - name: certs
        secret:
          secretName: ocm-dev-ca
          items:
          - key: ca-certificates.crt
            path: ca-certificates.crt
