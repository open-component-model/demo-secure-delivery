{{- if not .Values.rbac.only }}
apiVersion: batch/v1
kind: Job
metadata:
  name: upgrade-legacy
  namespace: {{ include "traffic-manager.namespace" . }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: upgrade-legacy
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      securityContext:
        {{- toYaml .Values.hooks.podSecurityContext | nindent 8 }}
      {{- with .Values.hooks.curl.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: upgrade-legacy
          securityContext:
            {{- if .Values.hooks.securityContext }}
            {{- toYaml .Values.hooks.securityContext | nindent 12 }}
            {{- else }}
            {{- toYaml .Values.securityContext | nindent 12 }}
            {{- end }}
          image: "{{ .Values.hooks.curl.registry }}/{{ .Values.hooks.curl.image }}:{{ .Values.hooks.curl.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: secret-volume
              mountPath: /secret
          env:
            - name: CURL_CA_BUNDLE
              value: /secret/ca.crt
          resources:
            {{- toYaml .Values.hooks.resources | nindent 12 }}
          {{- /*
          Helm considers applying a deployment a success. It doesn't wait for readinessProbes
          unless explicitly told to do so by passing --wait and there's no guarantee that's
          been done. Therefore, a retry is needed here to ensure proper upgrade.
          */}}
          args:
            - '--connect-timeout'
            - '5'
            - '--retry'
            - '5'
            - '--retry-delay'
            - '2'
            - '--retry-max-time'
            - '20'
            - '--retry-all-errors'
            - '--fail'
            - '--request'
            - POST
            - 'https://{{ .Values.agentInjector.name }}.{{ include "traffic-manager.namespace" . }}:{{ .Values.agentInjector.webhook.port }}/upgrade-legacy'
      volumes:
        - name: secret-volume
          secret:
            secretName: {{ .Values.agentInjector.secret.name }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
