apiVersion: config.ocm.software/v1alpha1
kind: ConfigData
metadata:
  name: ocm-config
configuration:
  defaults:
    replicas: 1
    message: "podinfo"
    serviceAccountName: default
  rules:
  - value: (( replicas ))
    file: helm_release.yaml
    path: spec.values.replicaCount
  - value: (( message ))
    file: helm_release.yaml
    path: spec.values.ui.message
  - value: (( serviceAccountName ))
    file: helm_release.yaml
    path: spec.values.serviceAccount.name
  schema:
    type: object
    additionalProperties: false
    properties:
      replicas:
        type: string
      message:
        type: string
      serviceAccountName:
        type: string
localization:
- file: helm_release.yaml
  repository: spec.values.image.repository
  tag: spec.values.image.tag
  resource:
    name: image
- file: helm_release.yaml
  tag: spec.chart.spec.version
  resource:
    name: chart
- file: helm_repository.yaml
  mapping:
    path: spec.url
    transform: |-
          package main

          import (
            "encoding/json"
            "path"
          )

          result: string

          for x in component.resources {
            if x.name == "chart" {
              result: path.Dir(x.access.imageReference)
            }
          }

          out: json.Marshal("oci://"+result)
- file: helm_release.yaml
  mapping:
    path: spec.values.image.repository
    transform: |-
          package main

          import (
            "encoding/json"
            "strings"
          )
          result: string

          for x in component.resources {
            if x.name == "image" {
              result: strings.Split(x.access.imageReference,":")[0]
            }
          }

          out: json.Marshal(result)
